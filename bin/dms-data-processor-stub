#!/usr/bin/env ruby
# Copyright (c) 2012 Jakub Pastuszek
#
# This file is part of Distributed Monitoring System.
#
# Distributed Monitoring System is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Distributed Monitoring System is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Distributed Monitoring System.  If not, see <http://www.gnu.org/licenses/>.

$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))

require 'cli'
require 'pathname'
require 'dms-poller'

settings = CLI.new do
	description "DMS data processor stub that will print out all received RawDataPoint objects"
	option :data_bind_address,	
		short: :b,
		description: 'ZeroMQ bind adderss for RawDataPoints collection',
		default: 'tcp://127.0.0.1:12100'
	option :message_count,
		short: :c,
		cast: Integer,
		description: 'exit after collecting given number of messages'
	switch :suppress_output,
		short: :s,
		description: 'do not print messages'
end.parse!

ZeroMQ.new do |zmq|
	start = Time.now.to_f
	messages = 1
	begin
		zmq.pull_bind(settings.data_bind_address) do |pull|
			pull.on_other do |message|
				puts "#{messages}: #{message}" unless settings.suppress_output
				messages += 1
			end

			until settings.message_count and messages > settings.message_count
				pull.receive!
			end
		end
	ensure
		took = Time.now.to_f - start
		puts "Took: #{took} seconds; #{messages.to_f / took} messages/s"
	end
end

